#!/usr/bin/env python

import json
import textwrap
import sys

import requests

import local_fabric_settings as ls


node_info = {
    'node_name': ls.NODE_NAME,
    'node_address': ls.HOST,
}

headers = {'X-Api-Token': ls.API_TOKEN}


def print_tweet(tweet):
    print(textwrap.fill(tweet['tweet'], width=70))
    print('-')
    print('id: {}, node: {}'.format(tweet['id'], tweet['name']))
    print('='*71)


def get_tweets(local=True):
    r = requests.get('http://{}/tweets'.format(ls.HOST))

    tweets = json.loads(r.text)

    for tweet in sorted(tweets, key=lambda i: i['id'], reverse=True):
        print_tweet(tweet)


def get_tweet():
    tweet_id = input('ID of tweet to fetch: ')
    print('\n\n')

    r = requests.get('http://{}/tweets/{}'.format(ls.HOST, tweet_id))

    print_tweet(json.loads(r.text))


def post_tweet():
    tweet = input("What's on your mind: ")
    print('\n\n')

    data = json.dumps({'tweet': tweet})

    r = requests.post('http://{}/tweets'.format(ls.HOST),
                      data=data,
                      headers=headers)

    print_tweet(json.loads(r.text))


def delete_tweet():
    tweet_id = input('ID of tweet to delete: ')
    print('\n\n')

    r = requests.delete('http://{}/tweets/{}'.format(ls.HOST, tweet_id),
                        headers=headers)

    if r.status_code == 204:
        print('Tweet deleted.')
    elif r.status_code == 404:
        print('Tweet does not exist.')
    else:
        print('Something went wrong.')


def search():
    yn = input('Search across all network? (y/n): ')

    if yn == 'y':
        all_network = '1'
    else:
        all_network = '0'

    content = input('String to search: ')
    created_from = input('Earliest date published: ')
    created_to = input('Latest date published: ')

    url = ('http://{}/search?'.format(ls.HOST) +
           'content={}'.format(content) +
           '&created_from={}'.format(created_from) +
           '&created_to={}'.format(created_to) +
           '&all={}'.format(all_network))

    r = requests.get(url)

    tweets = json.loads(r.text)

    print('\n\n')
    print('SEARCH RESULTS:')
    print('================\n')

    for tweet in tweets:
        print_tweet(tweet)


def join_network():
    init_node_name = input('Initial host name: ')
    init_node_address = input('Initial host address: ')

    body = json.loads({'name': init_node_name, 'address': init_node_address})

    r = request.post('http://{}/join_network'.format(ls.HOST),
                     data=body,
                     headers=headers)
    print(r.text)


def get_known_nodes():
    r = requests.get('http://{}/private/nodes'.format(ls.HOST), headers=headers)

    nodes = json.loads(r.text)

    print('KNOWN NODES')
    print('============')
    for node in nodes:
        print('name: {name}\naddress: {address}'.format(**node))
        print('------------------------------------')


ACTIONS = {
    '1': get_tweets,
    '2': get_tweet,
    '3': post_tweet,
    '4': delete_tweet,
    '5': search,
    '80': join_network,
    '90': get_known_nodes,
    '100': sys.exit
}


menu = '''


SEVENTWEETS NETWORK
--------------------
Node name: {node_name}
Node address: {node_address}
--------------------

Menu:
1 - Get all local tweets
2 - Get a local tweet by id
3 - Tweet!
4 - Delete a tweet
5 - Search
80 - Join network
90 - List known nodes
100 - Exit

'''.format(**node_info)


if __name__ == '__main__':
    while True:
        print(menu)

        action = input('Choose action: ')
        print('\n\n')

        ACTIONS[action]()



